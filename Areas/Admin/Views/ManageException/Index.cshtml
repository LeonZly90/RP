@{
    ViewData["Title"] = "Manage Exception Start/End Date";
    string page = "ManageException";
}
<script src="//cdnjs.cloudflare.com/ajax/libs/jszip/2.4.0/jszip.min.js"></script>

<div class="app-title">
    <img src="~/img/Pepper_TT_3.png" />
    <h1>Resource Planning Tool</h1>
    @*<nav class="rp-nav">
        <a class="rp-nav__link" href="/">Main Table</a>
        <a class="rp-nav__link active" href="/Admin/ManageException">Exceptions Table</a>
    </nav>*@
    @Html.Partial("_NavPartial", page)
</div>
@* GRID *@
<div>
    @(Html.Kendo().Grid<PepperResourceException>()
    .Name("PrException")
    .DataSource(dataSource => dataSource
    .Ajax()
    .ServerOperation(false) //Leon
    .Read(read => read.Action("PR_Exception_Read", "ManageException"))
    .Update(update => update.Action("PR_Exception_Update", "ManageException"))
    .Destroy(destroy => destroy.Action("PR_Exception_Delete", "ManageException"))
    .Events(ev => ev.Error("onError"))
    .PageSize(200)
    .Model(model =>
    {
        model.Id(h => h.EmployeeNumber + h.JobNumber);
        model.Field(h => h.EmployeeNumber).Editable(false);
        model.Field(h => h.JobNumber).Editable(false);
        model.Field(h => h.ExceptionStart).Editable(true);
        model.Field(h => h.ExceptionEnd).Editable(true);
        model.Field(h => h.EmpFirstName).Editable(false);
        model.Field(h => h.EmpLastName).Editable(false);
        model.Field(h => h.GL_FirstName).Editable(false);
        model.Field(h => h.GL_LastName).Editable(false);
        model.Field(h => h.Employee).Editable(false);
        model.Field(h => h.GL_Name).Editable(false);

    })
    )
    .Columns(columns =>
    {
        columns.Command(command => { command.Destroy().Template("<button type=\"button\" class=\"k-button k-button-icontext k-grid-delete\"><span class=\"k-icon k-i-trash\"></span></button>"); }).Title("Del").Width(80).Exportable(false);//.Locked(true)
        columns.Bound(h => h.Employee).Title("Name").Filterable(ftb => ftb.Multi(true).Search(true)).Width(200);
        columns.Bound(h => h.GL_Name).Title("GroupLeader").Filterable(ftb => ftb.Multi(true).Search(true)).Width(200);
        columns.Bound(h => h.JobNumber).Filterable(ftb => ftb.Multi(true).Search(true)).Width(150);
        columns.Bound(h => h.ExceptionStart).Title("ExceptionStart").Filterable(ftb => ftb.Multi(true).Search(true))
        .ClientTemplate(
            "#=kendo.toString(ExceptionStart, 'MM/dd/yyyy') #"
         )
        .Width(200)
        ;
        columns.Bound(h => h.ExceptionEnd).Title("ExceptionEnd").Filterable(ftb => ftb.Multi(true).Search(true))
        .ClientTemplate(
            "#=kendo.toString(ExceptionEnd, 'MM/dd/yyyy') #"
         )
        .Width(200)
        ;

    })
    .ToolBar(toolbar =>
    {
        toolbar.Save();
    })

    .ToolBar(tools => tools.Excel())
    .Excel(excel => excel
    .AllPages(true)
    .FileName("Exceptions.xlsx")
    .Filterable(true)
    .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
    )

    .ToolBar(tools => tools.Pdf())
    .Pdf(pdf => pdf
    .AllPages()
    .AvoidLinks()
    .PaperSize("A3")
    .Scale(0.8)
    .Margin("2cm", "1cm", "1cm", "1cm")
    .Landscape()
    .RepeatHeaders()
    .TemplateId("page-template")
    .FileName("Exceptions.pdf")
    .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
    )

    .Events(ev => ev.ColumnMenuInit("columnMenuInit"))
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable(pageable => pageable.Refresh(true).PageSizes(true).ButtonCount(5))
    .Sortable()
    .Navigatable()
    .Resizable(r => r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g => g.ShowFooter(false))
    .ColumnMenu()
    .Filterable()
    .Scrollable()
    .ToolBar(t => t.Search())
    .Height(800)
    .Search(search =>
    {
        search.Field(f => f.Employee);
        search.Field(f => f.GL_Name);
        search.Field(f => f.JobNumber);

    })

    .HtmlAttributes(new {@class = "materials-grid"})
    )

</div>

<script>
    function onError(e) {
        console.log(e.status);
    }
    function columnMenuInit(e) {
        if (e.field === "Employee" || e.field === "GL_Name" || e.field === "JobNumber" || e.field === "ExceptionStart" || e.field === "ExceptionEnd") {
            var filterMultiCheck = e.container.find(".k-filterable").data("kendoFilterMultiCheck")
            filterMultiCheck.container.empty();
            filterMultiCheck.checkSource.sort({ field: e.field, dir: "asc" });

            filterMultiCheck.checkSource.data(filterMultiCheck.checkSource.view().toJSON());
            filterMultiCheck.createCheckBoxes();
        }
    };
</script>